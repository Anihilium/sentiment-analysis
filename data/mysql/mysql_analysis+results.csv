Body	Label	Score	Translation	Positive	Negative	EmotionRationale
This doesn't handle null values; now there is no distinction between null and the empty string. Try:client.query('SELECT NULL as field_a, NULL as field_b, "" AS field_c', function(err, results) {if (err) throw err;assert.strictEqual(results[0].field_a, null);assert.strictEqual(results[0].field_b, null);assert.strictEqual(results[0].field_c, '');client.end();});	NEGATIVE	0.9995813369750977	This doesn't handle null values; now there is no distinction between null and the empty string.<br> Try:client.<br>query('SELECT NULL as field_a, NULL as field_b, " AS field_c', function(er, results) {if (er) throw er;assert.<br>strictEqual(results[0].<br>field_a, null)assert.<br>strictEqual(results[0].<br>field_b, null)assert.<br>strictEqual(results[0].<br>field_c, '')client.<br>end();})	2	-2	 This[0] doesn't[0] handle[0] null[0] values[1] now[0] there[0] is[0] no[0] distinction[0] between[0] null[0] and[0] the[0] empty[0] string[0] [[Sentence=-1,2=word max, 1-5]] Try[0] client[0] [[Sentence=-1,1=word max, 1-5]] query[0] 'SELECT[0] NULL[0] as[0] field_a[0] NULL[0] as[0] field_b[0] AS[0] field_c'[0] function[0] err/er[0] results[0] {if[0] err/er[0] throw[0] err/er[0] assert[0] [[Sentence=-1,1=word max, 1-5]] strictEqual[-1] results[0][0] [[Sentence=-2,1=word max, 1-5]] field_a[0] null[0] assert[0] [[Sentence=-1,1=word max, 1-5]] strictEqual[-1] results[0][0] [[Sentence=-2,1=word max, 1-5]] field_b[0] null[0] assert[0] [[Sentence=-1,1=word max, 1-5]] strictEqual[-1] results[0][0] [[Sentence=-2,1=word max, 1-5]] field_c[0] ''[0] client[0] [[Sentence=-1,1=word max, 1-5]] end[0] ();}[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
Fixed in: 10e81c252e6a9f3d83e9d05a8e8f693a2756784c	NEGATIVE	0.9828786849975586	Fixed in: 10e81c252e6a9f3d83e9d05a8e8f693a2756784c	1	-1	 Fixed[0] in[0] 10e81c252e6a9f3d83e9d05a8e8f693a2756784c[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
Is there a specific reason why BLOB's aren't cast into buffers?	NEGATIVE	0.9988193511962891	Is there a specific reason why BLOB's aren't cast into buffers?	1	-1	 Is[0] there[0] a[0] specific[0] reason[0] why[0] BLOB's[0] aren't[0] cast[0] into[0] buffers[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
My original patch contained support for casting blobs to buffers. Maybe there is a plan for implementing it differently? I dunno.	NEGATIVE	0.998972475528717	My original patch contained support for casting blobs to buffers.<br> Maybe there is a plan for implementing it differently?<br> I dunno.	2	-1	 My[0] original[0] patch[0] contained[0] support[1] for[0] casting[0] blobs[0] to[0] buffers[0] [[Sentence=-1,2=word max, 1-5]] Maybe[0] there[0] is[0] a[0] plan[0] for[0] implementing[0] it[0] differently[0] [[Sentence=-1,1=word max, 1-5]] I[0] dunno[0] [[Sentence=-1,1=word max, 1-5]][[[2,-1 max of sentences]]]
Yeah, I didn't do that part yet because it is hard to do efficiently. I need to talk to ryan to see if we can do better than that, but otherwise yes - this is coming back in. If any of you guys needs it right now, ping me and I'll put the naive implementation back in.	NEGATIVE	0.9912592768669128	Yeah, I didn't do that part yet because it is hard to do efficiently.<br> I need to talk to ryan to see if we can do better than that, but otherwise yes - this is coming back in.<br> If any of you guys needs it right now, ping me and I'll put the naive implementation back in.	1	-2	 Yeah[0] I[0] didn't[0] do[0] that[0] part[0] yet[0] because[0] it[0] is[0] hard[0] to[0] do[0] efficiently[0] [[Sentence=-1,1=word max, 1-5]] I[0] need[0] to[0] talk[0] to[0] ryan[0] to[0] see[0] if[0] we[0] can[0] do[0] better[0] than[0] that[0] but[0] otherwise[0] yes[0] this[0] is[0] coming[0] back[0] in[0] [[Sentence=-1,1=word max, 1-5]] If[0] any[0] of[0] you[0] guys[0] needs[0] it[0] right[0] now[0] ping[0] me[0] and[0] I'll[0] put[0] the[0] naive[-1] implementation[0] back[0] in[0] [[Sentence=-2,1=word max, 1-5]][[[1,-2 max of sentences]]]
Doesn't this create a memory problem for large result sets?	NEGATIVE	0.9993537664413452	Doesn't this create a memory problem for large result sets?	1	-2	 Doesn't[0] this[0] create[0] a[0] memory[0] problem[-1] for[0] large[0] result[0] sets[0] [[Sentence=-2,1=word max, 1-5]][[[1,-2 max of sentences]]]
It's not a bug - it's a feature! I mean in a lot of cases it is very convenient to buffer all result rows, but it is entirely optional. If you don't pass a callback to the  .query()  function, no result set buffering takes place and you only get individual  'row'  events.But maybe I'm missing something and you're saying there is a memory leak here?	NEGATIVE	0.9988297820091248	It's not a bug - it's a feature!<br> I mean in a lot of cases it is very convenient to buffer all result rows, but it is entirely optional.<br> If you don't pass a callback to the  .<br>query(  function, no result set buffering takes place and you only get individual  'row'  events.<br>But maybe I'm missing something and you're saying there is a memory leak here?	2	-2	 It's[0] not[0] a[0] bug[-1][NegatedDueToPreviousWord] it's[0] a[0] feature[0] [[Sentence=-1,2=word max, 1-5]] I[0] mean[0] in[0] a[0] lot[0] of[0] cases[0] it[0] is[0] very[0] convenient[0] to[0] buffer[0] all[0] result[0] rows[0] but[0] it[0] is[0] entirely[0] optional[0] [[Sentence=-1,1=word max, 1-5]] If[0] you[0] don't[0] pass[0] a[0] callback[0] to[0] the[0] [[Sentence=-1,1=word max, 1-5]] query[0] function[0] no[0] result[0] set[0] buffering[0] takes[0] place[0] and[0] you[0] only[0] get[0] individual[0] 'row'[0] events[0] [[Sentence=-1,1=word max, 1-5]] But[0] maybe[0] I'm[0] missing[0] something[0] and[0] you're[0] saying[0] there[0] is[0] a[0] memory[0] leak[-1] here[0] [[Sentence=-2,1=word max, 1-5]][[[2,-2 max of sentences]]]
I see. Did not see you always return the query object so one can handle the events themselves.Impressive work!	POSITIVE	0.9990652203559875	I see.<br> Did not see you always return the query object so one can handle the events themselves.<br>Impressive work!	2	-1	 I[0] see[0] [[Sentence=-1,1=word max, 1-5]] Did[0] not[0] see[0] you[0] always[0] return[0] the[0] query[0] object[0] so[0] one[0] can[0] handle[0] the[0] events[0] themselves[0] [[Sentence=-1,1=word max, 1-5]] Impressive[1] work[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
Thanks Malte! I'm using the same pattern in  formidable  (passing a callback causes buffering). It's certainly not obvious from a user perspective, so I think a little work needs to go into promoting this approach. I'll write a little blog post about it.In the future I would like to go even further and allow streaming the row values themselves, but that's even harder in terms of finding a nice API for it (most folks wouldn't want this behavior by default).	NEGATIVE	0.997711181640625	Thanks Malte!<br> I'm using the same pattern in  formidable  (passing a callback causes buffering)<br> It's certainly not obvious from a user perspective, so I think a little work needs to go into promoting this approach.<br> I'll write a little blog post about it.<br>In the future I would like to go even further and allow streaming the row values themselves, but that's even harder in terms of finding a nice API for it (most folks wouldn't want this behavior by default)	2	-2	 Thanks[1] Malte[0] [[Sentence=-1,2=word max, 1-5]] I'm[0] using[0] the[0] same[0] pattern[0] in[0] formidable[-1] passing[0] a[0] callback[0] causes[0] buffering[0] [[Sentence=-2,1=word max, 1-5]] It's[0] certainly[0] not[0] obvious[0] from[0] a[0] user[0] perspective[0] so[0] I[0] think[0] a[0] little[0] work[0] needs[0] to[0] go[0] into[0] promoting[0] this[0] approach[0] [[Sentence=-1,1=word max, 1-5]] I'll[0] write[0] a[0] little[0] blog[0] post[0] about[0] it[0] [[Sentence=-1,1=word max, 1-5]] In[0] the[0] future[0] I[0] would[0] like[1][-1 LastWordBoosterStrength] to[0] go[0] even[0] further[0] and[0] allow[0] streaming[0] the[0] row[0] values[1] themselves[0] but[0] that's[0] even[0] harder[0] in[0] terms[0] of[0] finding[0] a[0] nice[1] API[0] for[0] it[0] most[0] folks[0] wouldn't[0] want[0] this[0] behavior[0] by[0] default[-1] [[Sentence=-2,2=word max, 1-5]][[[2,-2 max of sentences]]]
Hmm, maybe if one is coming from an ActiveRecord like background. When working with cursors, receiving a callback per row feels natural. Then again this can always be handled on the level above as long as the raw API is exposed.	NEGATIVE	0.5770212411880493	Hm, maybe if one is coming from an ActiveRecord like background.<br> When working with cursors, receiving a callback per row feels natural.<br> Then again this can always be handled on the level above as long as the raw API is exposed.	2	-2	 Hmm/Hm[0] maybe[0] if[0] one[0] is[0] coming[0] from[0] an[0] ActiveRecord[0] like[1] background[0] [[Sentence=-1,2=word max, 1-5]] When[0] working[0] with[0] cursors[0] receiving[0] a[0] callback[0] per[0] row[0] feels[0] natural[0] [[Sentence=-1,1=word max, 1-5]] Then[0] again[0] this[0] can[0] always[0] be[0] handled[0] on[0] the[0] level[0] above[0] as[0] long[0] as[0] the[0] raw[0] API[0] is[0] exposed[-1] [[Sentence=-2,1=word max, 1-5]][[[2,-2 max of sentences]]]
Well, not everybody is as streamie as you, jed and me : ).	NEGATIVE	0.9982085227966309	Well, not everybody is as streamie as you, jed and me : )	1	-1	 Well[0] not[0] everybody[0] is[0] as[0] streamie[0] as[0] you[0] jed[0] and[0] me[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
You can write to me, when this part of the improvements will be completed, I will update the [node-mysql-bindings-benchmark](http://github.com/Sannis/node-mysql-bindings-benchmarks) :)Any comments are welcome.	POSITIVE	0.9935517311096191	You can write to me, when this part of the improvements will be completed, I will update the [node-mysql-bindings-benchmark](http://github.<br>com/Sannis/node-mysql-bindings-benchmarks) :Any comments are welcome.	2	-1	 You[0] can[0] write[0] to[0] me[0] when[0] this[0] part[0] of[0] the[0] improvements[1] will[0] be[0] completed[0] I[0] will[0] update[0] the[0] [node[0] mysql[0] bindings[0] benchmark][0] http[0] ://github[0] [[Sentence=-1,2=word max, 1-5]] com/Sannis/node[0] mysql[0] bindings[0] benchmarks[0] Any[0] comments[0] are[0] welcome[1] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
For now I just picked some low hanging fruits that were easy to spot. Hopefully I'll have time to do some full profiling soon to see if there is more performance to be gained. I'll let you know.	POSITIVE	0.8435462713241577	For now I just picked some low hanging fruits that were easy to spot.<br> Hopefully I'll have time to do some full profiling soon to see if there is more performance to be gained.<br> I'll let you know.	1	-1	 For[0] now[0] I[0] just[0] picked[0] some[0] low[-1][--1 LastWordBoosterStrength] hanging[0] fruits[0] that[0] were[0] easy[0] to[0] spot[0] [[Sentence=-1,1=word max, 1-5]] Hopefully[0] I'll[0] have[0] time[0] to[0] do[0] some[0] full[0] profiling[0] soon[0] to[0] see[0] if[0] there[0] is[0] more[0] performance[0] to[0] be[0] gained[0] [[Sentence=-1,1=word max, 1-5]] I'll[0] let[0] you[0] know[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
 code POWS[packet.index] /code  can also be written  code 1    (packet.index    3) /code  if you want to avoid multiplication (or  code 1    (packet.index \* 8) /code  if you want it readable). but the lookup table is probably as fast :)	NEGATIVE	0.9939717650413513	 code POWS[packet.<br>index] /code  can also be written  code 1    (packet.<br>index    3) /code  if you want to avoid multiplication (or  code 1    (packet.<br>index \* 8) /code  if you want it readable)<br> but the lookup table is probably as fast fast	2	-2	 code[0] POWS[packet[0] [[Sentence=-1,1=word max, 1-5]] index][0] /code[0] can[0] also[0] be[0] written[0] code[0] 1[0] packet[0] [[Sentence=-1,1=word max, 1-5]] index[0] 3[0] /code[0] if[0] you[0] want[0] to[0] avoid[-1] multiplication[0] or[0] code[0] 1[0] packet[0] [[Sentence=-2,1=word max, 1-5]] index[0] \[0] 8[0] /code[0] if[0] you[0] want[0] it[0] readable[0] [[Sentence=-1,1=word max, 1-5]] but[0] the[0] lookup[0] table[0] is[0] probably[0] as[0] fast[0][+1 Emoticon] [[Sentence=-1,2=word max, 1-5]][[[2,-2 max of sentences]]]
Cal: I just tried that, but it doesn't seem to be any faster. Do you see any reason why it should be faster than a property lookup?	NEGATIVE	0.9993009567260742	Cal: I just tried that, but it doesn't seem to be any faster.<br> Do you see any reason why it should be faster than a property lookup?	1	-1	 Cal[0] I[0] just[0] tried[0] that[0] but[0] it[0] doesn't[0] seem[0] to[0] be[0] any[0] faster[0] [[Sentence=-1,1=word max, 1-5]] Do[0] you[0] see[0] any[0] reason[0] why[0] it[0] should[0] be[0] faster[0] than[0] a[0] property[0] lookup[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
It should be faster than the power op, but probably no faster than a property lookup in practice - they're both very very simple ops. I did a quick benchmark:   2 shifts : 273 per  s (microsecond)lookup: 201 per  spower:23 per  s   so i think the lookup is just fine :D	POSITIVE	0.9956603646278381	It should be faster than the power op, but probably no faster than a property lookup in practice - they're both very very simple ops.<br> I did a quick benchmark:   2 shifts : 273 per  s (microsecond)lookup: 201 per  spower:23 per  s   so i think the lookup is just fine fine	3	-1	 It[0] should[0] be[0] faster[0] than[0] the[0] power[0] op[0] but[0] probably[0] no[0] faster[0] than[0] a[0] property[0] lookup[0] in[0] practice[0] they're[0] both[0] very[0] very[0] simple[0] ops[0] [[Sentence=-1,1=word max, 1-5]] I[0] did[0] a[0] quick[0] benchmark[0] 2[0] shifts[0] 273[0] per[0] s[0] microsecond[0] lookup[0] 201[0] per[0] spower[0] :23[0] per[0] s[0] so[0] i[0] think[0] the[0] lookup[0] is[0] just[0] fine[2][-1 LastWordBoosterStrength][+1 Emoticon] [[Sentence=-1,3=word max, 1-5]][[[3,-1 max of sentences]]]
Yeah, I still hope to find some major performance bottlenecks - right now this driver is still an order of magnitude slower than the C competition, and I don't think it should be that slow : ).	NEGATIVE	0.9987079501152039	Yeah, I still hope to find some major performance bottlenecks - right now this driver is still an order of magnitude slower than the C competition, and I don't think it should be that slow : )	3	-1	 Yeah[0] I[0] still[0] hope[2] to[0] find[0] some[0] major[0] performance[0] bottlenecks[0] right[0] now[0] this[0] driver[0] is[0] still[0] an[0] order[0] of[0] magnitude[0] slower[0] than[0] the[0] C[0] competition[0] and[0] I[0] don't[0] think[0] it[0] should[0] be[0] that[0] slow[0] [[Sentence=-1,3=word max, 1-5]][[[3,-1 max of sentences]]]
I just fixed the reconnect behavior in 2db5bbdb449686733290390cb3c196d9af3d43be. Your benchmark should now work.Anyway, also test  client.destroy()  as that is now behaving like  client.end()  used to behave. I would expect  client.end()  to be a good bit slower, but I guess you will see for yourself : ).	NEGATIVE	0.9944288730621338	I just fixed the reconnect behavior in 2db5bbdb449686733290390cb3c196d9af3d43be.<br> Your benchmark should now work.<br>Anyway, also test  client.<br>destroy(  as that is now behaving like  client.<br>end(  used to behave.<br> I would expect  client.<br>end(  to be a good bit slower, but I guess you will see for yourself : )	2	-3	 I[0] just[0] fixed[0] the[0] reconnect[0] behavior[0] in[0] 2db5bbdb449686733290390cb3c196d9af3d43be[0] [[Sentence=-1,1=word max, 1-5]] Your[0] benchmark[0] should[0] now[0] work[0] [[Sentence=-1,1=word max, 1-5]] Anyway[0] also[0] test[0] client[0] [[Sentence=-1,1=word max, 1-5]] destroy[-2] as[0] that[0] is[0] now[0] behaving[0] like[1] client[0] [[Sentence=-3,2=word max, 1-5]] end[0] used[0] to[0] behave[0] [[Sentence=-1,1=word max, 1-5]] I[0] would[0] expect[0] client[0] [[Sentence=-1,1=word max, 1-5]] end[0] to[0] be[0] a[0] good[1] bit[0] slower[0] but[0] I[0] guess[0] you[0] will[0] see[0] for[0] yourself[0] [[Sentence=-1,2=word max, 1-5]][[[2,-3 max of sentences]]]
Is there any reason why this function, unlike all others is attached directly to Client rather than to Client.prototype?	NEGATIVE	0.9989737868309021	Is there any reason why this function, unlike all others is attached directly to Client rather than to Client.<br>prototype?	1	-1	 Is[0] there[0] any[0] reason[0] why[0] this[0] function[0] unlike[0] all[0] others[0] is[0] attached[0] directly[0] to[0] Client[0] rather[0] than[0] to[0] Client[0] [[Sentence=-1,1=word max, 1-5]] prototype[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
Yeah, it doesn't depend on the state of a client instance, so this makes it "class method" in my book. How would you do it?	NEGATIVE	0.9942881464958191	Yeah, it doesn't depend on the state of a client instance, so this makes it "class method" in my book.<br> How would you do it?	1	-1	 Yeah[0] it[0] doesn't[0] depend[0] on[0] the[0] state[0] of[0] a[0] client[0] instance[0] so[0] this[0] makes[0] it[0] class[0] method[0] in[0] my[0] book[0] [[Sentence=-1,1=word max, 1-5]] How[0] would[0] you[0] do[0] it[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
interesting, I imagine the lookup is a bit costly since it has to traverse a few scopes but 22%?? awesome!	NEGATIVE	0.8165212869644165	interesting, I imagine the lookup is a bit costly since it has to traverse a few scopes but 22%?<br> awesome!	3	-2	 interesting[1] I[0] imagine[0] the[0] lookup[0] is[0] a[0] bit[0] costly[-1] since[0] it[0] has[0] to[0] traverse[0] a[0] few[0] scopes[0] but[0] 22%[0] [[Sentence=-2,2=word max, 1-5]] awesome[2] [[Sentence=-1,3=word max, 1-5]][[[3,-2 max of sentences]]]
Yeah, Tim-smart mentioned something about this to me a while back when I was working on a new websocket parser.	POSITIVE	0.9193645715713501	Yeah, Tim-smart mentioned something about this to me a while back when I was working on a new websocket parser.	2	-1	 Yeah[0] Tim[0] smart[1] mentioned[0] something[0] about[0] this[0] to[0] me[0] a[0] while[0] back[0] when[0] I[0] was[0] working[0] on[0] a[0] new[0] websocket[0] parser[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
I guess its all relative, compared to the rest of your app it might not make much of a difference at all, but pretty easy optimization to squeeze out	NEGATIVE	0.9847402572631836	I guess its all relative, compared to the rest of your ap it might not make much of a difference at all, but pretty easy optimization to squeeze out	3	-1	 I[0] guess[0] its[0] all[0] relative[0] compared[0] to[0] the[0] rest[0] of[0] your[0] app/ap[0] it[0] might[0] not[0] make[0] much[0] of[0] a[0] difference[0] at[0] all[0] but[0] pretty[2] easy[0] optimization[0] to[0] squeeze[0] out[0] [[Sentence=-1,3=word max, 1-5]][[[3,-1 max of sentences]]]
Yeah, I wouldn't take this optimization _anywhere_ else, but this switch statement is literally executed millions of times, so it makes sense here. There are a few other micro-optimizations like this that I have found, but they're not worthwhile compared to this. I'm still hoping to find some bigger opportunities to gain more speed. At this point this module is  7x slower for SELECT and  2x slower for INSERT compared to PHP.	NEGATIVE	0.9993686079978943	Yeah, I wouldn't take this optimization _anywhere_ else, but this switch statement is literally executed millions of times, so it makes sense here.<br> There are a few other micro-optimizations like this that I have found, but they're not worthwhile compared to this.<br> I'm still hoping to find some bigger opportunities to gain more speed.<br> At this point this module is  7x slower for SELECT and  2x slower for INSERT compared to PHP.	2	-2	 Yeah[0] I[0] wouldn't[0] take[0] this[0] optimization[0] _anywhere_[0] else[0] but[0] this[0] switch[0] statement[0] is[0] literally[0] executed[-1] millions[0] of[0] times[0] so[0] it[0] makes[0] sense[0] here[0] [[Sentence=-2,1=word max, 1-5]] There[0] are[0] a[0] few[0] other[0] micro[0] optimizations[0] like[1] this[0] that[0] I[0] have[0] found[0] but[0] they're[0] not[0] worthwhile[1][NegatedDueToPreviousWord] compared[0] to[0] this[0] [[Sentence=-2,2=word max, 1-5]] I'm[0] still[0] hoping[1] to[0] find[0] some[0] bigger[0] opportunities[0] to[0] gain[0] more[0] speed[0] [[Sentence=-1,2=word max, 1-5]] At[0] this[0] point[0] this[0] module[0] is[0] 7x[0] slower[0] for[0] SELECT[0] and[0] 2x[0] slower[0] for[0] INSERT[0] compared[0] to[0] PHP[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
ah, that explains it :)	POSITIVE	0.9833315014839172	ah, that explains it it	2	-1	 ah[0] that[0] explains[0] it[0][+1 Emoticon] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
I'm just curious, what if array of functions indexed by state is used? At least in C it would be good optimization for a big switch.	NEGATIVE	0.997657299041748	I'm just curious, what if array of functions indexed by state is used?<br> At least in C it would be good optimization for a big switch.	2	-1	 I'm[0] just[0] curious[0] what[0] if[0] array[0] of[0] functions[0] indexed[0] by[0] state[0] is[0] used[0] [[Sentence=-1,1=word max, 1-5]] At[0] least[0] in[0] C[0] it[0] would[0] be[0] good[1] optimization[0] for[0] a[0] big[0] switch[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
It turns out it's  60% faster than using a plain variable as this test shows: http://jsperf.com/variable-tree-lookup	NEGATIVE	0.960719645023346	It turns out it's  60% faster than using a plain variable as this test shows: http://jsperf.<br>com/variable-tree-lookup	1	-1	 It[0] turns[0] out[0] it's[0] 60%[0] faster[0] than[0] using[0] a[0] plain[0] variable[0] as[0] this[0] test[0] shows[0] http[0] ://jsperf[0] [[Sentence=-1,1=word max, 1-5]] com/variable[0] tree[0] lookup[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
vgrichina: Just tried it, it's just about the same speed it seems.	NEGATIVE	0.9944341778755188	vgrichina: Just tried it, it's just about the same speed it seems.	1	-1	 vgrichina[0] Just[0] tried[0] it[0] it's[0] just[0] about[0] the[0] same[0] speed[0] it[0] seems[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
I think it's because you were looking up the property of an object which probably make v8 opt out of inlining the statement. The difference in those raw operations would not be 20% :)	NEGATIVE	0.9988713264465332	I think it's because you were looking up the property of an object which probably make v8 opt out of inlining the statement.<br> The difference in those raw operations would not be 20% 20%	2	-1	 I[0] think[0] it's[0] because[0] you[0] were[0] looking[0] up[0] the[0] property[0] of[0] an[0] object[0] which[0] probably[0] make[0] v8[0] opt[0] out[0] of[0] inlining[0] the[0] statement[0] [[Sentence=-1,1=word max, 1-5]] The[0] difference[0] in[0] those[0] raw[0] operations[0] would[0] not[0] be[0] 20%[0][+1 Emoticon] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
yeah good call, if they are numeric and _not_ properties I could see v8 inlining them, but even eval() could get in the way of that I'd imagine	NEGATIVE	0.9895965456962585	yeah good call, if they are numeric and _not_ properties I could see v8 inlining them, but even eval( could get in the way of that I'd imagine	2	-1	 yeah[0] good[1] call[0] if[0] they[0] are[0] numeric[0] and[0] _not_[0] properties[0] I[0] could[0] see[0] v8[0] inlining[0] them[0] but[0] even[0] eval[0] could[0] get[0] in[0] the[0] way[0] of[0] that[0] I'd[0] imagine[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
eval breaks pretty much all optimizations :)	NEGATIVE	0.9590583443641663	eval breaks pretty much all optimizations optimizations	3	-1	 eval[0] breaks[0] pretty[2] much[0] all[0] optimizations[0][+1 Emoticon] [[Sentence=-1,3=word max, 1-5]][[[3,-1 max of sentences]]]
yup lol	POSITIVE	0.9641520977020264	yup laugh out loud	2	-1	 yup[0] lol[1] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
Great, I'll update [node-mysql-bindings-benchmarks](http://github.com/Sannis/node-mysql-bindings-benchmarks) at this evening.	POSITIVE	0.9940598011016846	Great, I'll update [node-mysql-bindings-benchmarks](http://github.<br>com/Sannis/node-mysql-bindings-benchmarks) at this evening.	3	-1	 Great[2] I'll[0] update[0] [node[0] mysql[0] bindings[0] benchmarks][0] http[0] ://github[0] [[Sentence=-1,3=word max, 1-5]] com/Sannis/node[0] mysql[0] bindings[0] benchmarks[0] at[0] this[0] evening[0] [[Sentence=-1,1=word max, 1-5]][[[3,-1 max of sentences]]]
Please push this newest version to NPM as soon as possible... I really need this array handling ability in a current project.	NEGATIVE	0.9932796955108643	Please push this newest version to NPM as soon as possible.<br> I really need this array handling ability in a current project.	2	-1	 Please[1] push[0] this[0] newest[0] version[0] to[0] NPM[0] as[0] soon[0] as[0] possible[0] [[Sentence=-1,2=word max, 1-5]] I[0] really[0] need[0] this[0] array[0] handling[0] ability[0] in[0] a[0] current[0] project[0] [[Sentence=-1,1=word max, 1-5]][[[2,-1 max of sentences]]]
I agree. Please push to NPM.	POSITIVE	0.9790142178535461	I agree.<br> Please push to NPM.	2	-1	 I[0] agree[0] [[Sentence=-1,1=word max, 1-5]] Please[1] push[0] to[0] NPM[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
 1 to pushing to npm	POSITIVE	0.9228347539901733	 1 to pushing to npm	1	-1	 1[0] to[0] pushing[0] to[0] npm[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
How can I put the new password? MySQL version? Re-make the user?Edit 1: Is the Hashing?	NEGATIVE	0.999594509601593	How can I put the new password?<br> MySQL version?<br> Re-make the user?<br>Edit 1: Is the Hashing?	1	-1	 How[0] can[0] I[0] put[0] the[0] new[0] password[0] [[Sentence=-1,1=word max, 1-5]] MySQL[0] version[0] [[Sentence=-1,1=word max, 1-5]] Re[0] make[0] the[0] user[0] [[Sentence=-1,1=word max, 1-5]] Edit[0] 1[0] Is[0] the[0] Hashing[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
Does this pass the test suite?	NEGATIVE	0.9835879802703857	Does this pass the test suite?	1	-1	 Does[0] this[0] pass[0] the[0] test[0] suite[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
There should be a test for this.	NEGATIVE	0.9962522387504578	There should be a test for this.	1	-1	 There[0] should[0] be[0] a[0] test[0] for[0] this[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
OK, I'll do it in a moment.	POSITIVE	0.9994745254516602	OK, I'll do it in a moment.	1	-1	 OK[0] I'll[0] do[0] it[0] in[0] a[0] moment[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
You were right about the test. It made me realize the stupidity of my change :smile: I'll update it now.	NEGATIVE	0.9963564276695251	You were right about the test.<br> It made me realize the stupidity of my change :smile: I'll update it now.	3	-2	 You[0] were[0] right[0] about[0] the[0] test[0] [[Sentence=-1,1=word max, 1-5]] It[0] made[0] me[0] realize[0] the[0] stupidity[-1] of[0] my[0] change[0] smile[2] I'll[0] update[0] it[0] now[0] [[Sentence=-2,3=word max, 1-5]][[[3,-2 max of sentences]]]
Great work man. Thank you so much. :heart: :heart: :heart:	POSITIVE	0.9998631477355957	Great work man.<br> Thank you so much.<br> :heart: :heart: :heart:	3	-1	 Great[2] work[0] man[0] [[Sentence=-1,3=word max, 1-5]] Thank[1] you[0] so[0] much[0] [[Sentence=-1,2=word max, 1-5]] heart[0] heart[0] heart[0] [[Sentence=-1,1=word max, 1-5]][[[3,-1 max of sentences]]]
Why does  'drain'  take an  err  argument here? I think this is copy & paste failure, isn't it? : p	NEGATIVE	0.9998127222061157	Why does  'drain'  take an  er  argument here?<br> I think this is copy & paste failure, isn't it?<br> : p	1	-3	 Why[0] does[0] 'drain'[0] take[0] an[0] err/er[0] argument[-1] here[0] [[Sentence=-2,1=word max, 1-5]] I[0] think[0] this[0] is[0] copy[0] &[0] paste[0] failure[-2] isn't[0] it[0] [[Sentence=-3,1=word max, 1-5]] p[0] [[Sentence=-1,1=word max, 1-5]][[[1,-3 max of sentences]]]
LGTM, good work. Did you also add a note to the docs?UPDATE: never mind, I see you did. Awesome!	POSITIVE	0.9998454451560974	LGTM, good work.<br> Did you also add a note to the docs?<br>UPDATE: never mind, I see you did.<br> Awesome!	3	-1	 LGTM[0] good[1] work[0] [[Sentence=-1,2=word max, 1-5]] Did[0] you[0] also[0] add[0] a[0] note[0] to[0] the[0] docs[0] [[Sentence=-1,1=word max, 1-5]] UPDATE[0] never[0] mind[0] I[0] see[0] you[0] did[0] [[Sentence=-1,1=word max, 1-5]] Awesome[2] [[Sentence=-1,3=word max, 1-5]][[[3,-1 max of sentences]]]
Yeah.. you got me! :P	POSITIVE	0.9992994070053101	Yeah.<br> you got me!<br> !	2	-1	 Yeah[0] [[Sentence=-1,1=word max, 1-5]] you[0] got[0] me[0] [[Sentence=-1,1=word max, 1-5]][+1 Emoticon] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
Fixed.	POSITIVE	0.974662184715271	Fixed.	1	-1	 Fixed[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
You should create a new class called  Field  for this as v8 really loves named constructors for hidden class optimizations. It also adds more structure to things, which I like.	POSITIVE	0.9962613582611084	You should create a new class called  Field  for this as v8 really loves named constructors for hidden class optimizations.<br> It also adds more structure to things, which I like.	4	-1	 You[0] should[0] create[0] a[0] new[0] class[0] called[0] Field[0] for[0] this[0] as[0] v8[0] really[0] loves[2][1 LastWordBoosterStrength] named[0] constructors[0] for[0] hidden[0] class[0] optimizations[0] [[Sentence=-1,4=word max, 1-5]] It[0] also[0] adds[0] more[0] structure[0] to[0] things[0] which[0] I[0] like[1] [[Sentence=-1,2=word max, 1-5]][[[4,-1 max of sentences]]]
:hammer: sweet!	POSITIVE	0.9997287392616272	:hammer: sweet!	2	-1	 hammer[0] sweet[1] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
No, thank you guys.That's an awesome turn around!Sorry for being absent in the earlier request for a use case.My particular use case was that I needed to get 3M rows of data out of Mysql and then pass it to another batch API.The data had to be chunked   1000 rows for the batch API.So i looped through keys (id   1000,id   1000   2000,etc).But with 3M rows and growing that's   3K queries that have to get queued up before any work starts and the foot print is more significant and not fixed.	NEGATIVE	0.999283492565155	No, thank you guys.<br>That's an awesome turn around!<br>Sorry for being absent in the earlier request for a use case.<br>My particular use case was that I needed to get 3M rows of data out of Mysql and then pass it to another batch API.<br>The data had to be chunked   100 rows for the batch API.<br>So i looped through keys (id   100,id   100   200,etc)<br>But with 3M rows and growing that's   3K queries that have to get queued up before any work starts and the foot print is more significant and not fixed.	3	-2	 No[0] thank[1] you[0] guys[0] [[Sentence=-1,2=word max, 1-5]] That's[0] an[0] awesome[2] turn[0] around[0] [[Sentence=-1,3=word max, 1-5]] Sorry[-1] for[0] being[0] absent[-1] in[0] the[0] earlier[0] request[0] for[0] a[0] use[0] case[0] [[Sentence=-2,1=word max, 1-5]] My[0] particular[0] use[0] case[0] was[0] that[0] I[0] needed[0] to[0] get[0] 3M[0] rows[0] of[0] data[0] out[0] of[0] Mysql[0] and[0] then[0] pass[0] it[0] to[0] another[0] batch[0] API[0] [[Sentence=-1,1=word max, 1-5]] The[0] data[0] had[0] to[0] be[0] chunked[0] 1000/100[0] rows[0] for[0] the[0] batch[0] API[0] [[Sentence=-1,1=word max, 1-5]] So[0] i[0] looped[0] through[0] keys[0] id[0] 1000/100[0] id[0] 1000/100[0] 2000/200[0] etc[0] [[Sentence=-1,1=word max, 1-5]] But[0] with[0] 3M[0] rows[0] and[0] growing[0] that's[0] 3K[0] queries[0] that[0] have[0] to[0] get[0] queued[0] up[0] before[0] any[0] work[0] starts[0] and[0] the[0] foot[0] print[0] is[0] more[0] significant[0] and[0] not[0] fixed[0] [[Sentence=-1,1=word max, 1-5]][[[3,-2 max of sentences]]]
:watermelon: lawlz	NEGATIVE	0.9457523226737976	:watermelon: lawlz	1	-1	 watermelon[0] lawlz[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
lol	NEGATIVE	0.9438177347183228	laugh out loud	2	-1	 lol[1] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
: 1:	POSITIVE	0.9945157170295715	: 1:	1	-1	 1[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
![Tabs](https://gimmebar-assets.s3.amazonaws.com/4d288c2806362.png)	NEGATIVE	0.9838466048240662	![Tabs](https://gimmebar-assets.<br>s3.<br>amazonaws.<br>com/4d288c2806362.<br>png)	1	-1	 ![Tabs][0] https[0] ://gimmebar[0] assets[0] [[Sentence=-1,1=word max, 1-5]] s3[0] [[Sentence=-1,1=word max, 1-5]] amazonaws[0] [[Sentence=-1,1=word max, 1-5]] com/4d288c2806362[0] [[Sentence=-1,1=word max, 1-5]] png[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
:heart:	POSITIVE	0.9998063445091248	:heart:	1	-1	 heart[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
: 1:	POSITIVE	0.9945157170295715	: 1:	1	-1	 1[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
No update on the Changes file?	NEGATIVE	0.9996131062507629	No update on the Changes file?	1	-1	 No[0] update[0] on[0] the[0] Changes[0] file[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
Oops, that's my bad. First time bumping versions in this project. I will update the changes file.	NEGATIVE	0.9993739128112793	Oops, that's my bad.<br> First time bumping versions in this project.<br> I will update the changes file.	1	-2	 Oops[0] that's[0] my[0] bad[-1] [[Sentence=-2,1=word max, 1-5]] First[0] time[0] bumping[0] versions[0] in[0] this[0] project[0] [[Sentence=-1,1=word max, 1-5]] I[0] will[0] update[0] the[0] changes[0] file[0] [[Sentence=-1,1=word max, 1-5]][[[1,-2 max of sentences]]]
It's just Pool, I bumped version before you 1 or 2 days :)	NEGATIVE	0.9971082210540771	It's just Pool, I bumped version before you 1 or 2 days days	2	-1	 It's[0] just[0] Pool[0] I[0] bumped[0] version[0] before[0] you[0] 1[0] or[0] 2[0] days[0][+1 Emoticon] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
@bhafer The only concern I have here is that your entire app shares a single connection, right?This means if you get 100 requests or have a couple people running some reports that take a bit process, your single DB connection could become a pretty big bottleneck, right?Any clever ways around this?	NEGATIVE	0.9991686940193176	@bhafer The only concern I have here is that your entire ap shares a single connection, right?<br>This means if you get 100 requests or have a couple people running some reports that take a bit process, your single DB connection could become a pretty big bottleneck, right?<br>Any clever ways around this?	3	-2	 @bhafer[0] The[0] only[0] concern[-1] I[0] have[0] here[0] is[0] that[0] your[0] entire[0] app/ap[0] shares[0] a[0] single[0] connection[0] right[0] [[Sentence=-2,1=word max, 1-5]] This[0] means[0] if[0] you[0] get[0] 100[0] requests[0] or[0] have[0] a[0] couple[0] people[0] running[0] some[0] reports[0] that[0] take[0] a[0] bit[0] process[0] your[0] single[0] DB[0] connection[0] could[0] become[0] a[0] pretty[2] big[0] bottleneck[0] right[0] [[Sentence=-1,3=word max, 1-5]] Any[0] clever[0] ways[0] around[0] this[0] [[Sentence=-1,1=word max, 1-5]][[[3,-2 max of sentences]]]
@anthonywebb you would need to use a pool of connections or make a new connection for each request, whichever is better for your use-case.	NEGATIVE	0.9989466071128845	@anthonywebb you would need to use a pool of connections or make a new connection for each request, whichever is better for your use-case.	1	-1	 @anthonywebb[0] you[0] would[0] need[0] to[0] use[0] a[0] pool[0] of[0] connections[0] or[0] make[0] a[0] new[0] connection[0] for[0] each[0] request[0] whichever[0] is[0] better[0] for[0] your[0] use[0] case[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
@dougwilson do yo know of anyone who is doing something like that above with the new pool support that was added?I've been looking at the pool stuff but am not wild about having to manually release the connection each time a db call is complete, feels like that should just happen in the background automatically?	NEGATIVE	0.9989916682243347	@dougwilson do yo know of anyone who is doing something like that above with the new pool support that was added?<br>I've been looking at the pool stuff but am not wild about having to manually release the connection each time a db call is complete, feels like that should just happen in the background automatically?	2	-1	 @dougwilson[0] do[0] yo[0] know[0] of[0] anyone[0] who[0] is[0] doing[0] something[0] like[1] that[0] above[0] with[0] the[0] new[0] pool[0] support[1] that[0] was[0] added[0] [[Sentence=-1,2=word max, 1-5]] I've[0] been[0] looking[0] at[0] the[0] pool[0] stuff[0] but[0] am[0] not[0] wild[0] about[0] having[0] to[0] manually[0] release[0] the[0] connection[0] each[0] time[0] a[0] db[0] call[0] is[0] complete[0] feels[0] like[1] that[0] should[0] just[0] happen[0] in[0] the[0] background[0] automatically[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
@anthonywebb I updated my comment above with a function that will run a single query from the new built-in pool where you don't have to worry about returning anything to the pool. Just note cavets about doing something like this you cannot use transactions and other session state (the save cavets apply to  node-mysql-pool  there, so I guess you won't see anything different).	NEGATIVE	0.9831188917160034	@anthonywebb I updated my comment above with a function that will run a single query from the new built-in pool where you don't have to worry about returning anything to the pool.<br> Just note cavets about doing something like this you cannot use transactions and other session state (the save cavets apply to  node-mysql-pool  there, so I guess you won't see anything different)	2	-4	 @anthonywebb[0] I[0] updated[0] my[0] comment[0] above[0] with[0] a[0] function[0] that[0] will[0] run[0] a[0] single[0] query[0] from[0] the[0] new[0] built[0] in[0] pool[0] where[0] you[0] don't[0] have[0] to[0] worry[-3] about[0] returning[0] anything[0] to[0] the[0] pool[0] [[Sentence=-4,1=word max, 1-5]] Just[0] note[0] cavets[0] about[0] doing[0] something[0] like[1] this[0] you[0] cannot[0] use[0] transactions[0] and[0] other[0] session[0] state[0] the[0] save[1] cavets[0] apply[0] to[0] node[0] mysql[0] pool[0] there[0] so[0] I[0] guess[0] you[0] won't[0] see[0] anything[0] different[0] [[Sentence=-1,2=word max, 1-5]][[[2,-4 max of sentences]]]
The main reason the example in the README does not work is because  connection   mysql.createConnection(connection.config);  does nothing.  connection  is not the global connection variable, as expected in the example, rather it is the name of the first argument of  handleDisconnect .	NEGATIVE	0.9997112154960632	The main reason the example in the README does not work is because  connection   mysql.<br>createConnection(connection.<br>config)  does nothing.<br>  connection  is not the global connection variable, as expected in the example, rather it is the name of the first argument of  handleDisconnect .	1	-2	 The[0] main[0] reason[0] the[0] example[0] in[0] the[0] README[0] does[0] not[0] work[0] is[0] because[0] connection[0] mysql[0] [[Sentence=-1,1=word max, 1-5]] createConnection[0] connection[0] [[Sentence=-1,1=word max, 1-5]] config[0] does[0] nothing[0] [[Sentence=-1,1=word max, 1-5]] connection[0] is[0] not[0] the[0] global[0] connection[0] variable[0] as[0] expected[0] in[0] the[0] example[0] rather[0] it[0] is[0] the[0] name[0] of[0] the[0] first[0] argument[-1] of[0] handleDisconnect[0] [[Sentence=-2,1=word max, 1-5]][[[1,-2 max of sentences]]]
An added benefit of registering the connection object inside the query object is the ability to close it directly within the query callback.This raises a question whether the connection object reference should be declared with an underscore or not.    jsmysql.createConnection(options).query(sqlTxt,function(err,d) {process(err,d);this._connection.end();});   	NEGATIVE	0.9113093614578247	An added benefit of registering the connection object inside the query object is the ability to close it directly within the query callback.<br>This raises a question whether the connection object reference should be declared with an underscore or not.<br>    jsmysql.<br>createConnection(options)<br>query(sqlTxt,function(er,d) {process(er,d)this._connection.<br>end();})  	1	-1	 An[0] added[0] benefit[0] of[0] registering[0] the[0] connection[0] object[0] inside[0] the[0] query[0] object[0] is[0] the[0] ability[0] to[0] close[0] it[0] directly[0] within[0] the[0] query[0] callback[0] [[Sentence=-1,1=word max, 1-5]] This[0] raises[0] a[0] question[0] whether[0] the[0] connection[0] object[0] reference[0] should[0] be[0] declared[0] with[0] an[0] underscore[0] or[0] not[0] [[Sentence=-1,1=word max, 1-5]] jsmysql[0] [[Sentence=-1,1=word max, 1-5]] createConnection[0] options[0] [[Sentence=-1,1=word max, 1-5]] query[0] sqlTxt[0] function[0] err/er[0] d[0] {process[0] err/er[0] d[0] this[0] ._connection[0] [[Sentence=-1,1=word max, 1-5]] end[0] ();}[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
I agree it can get handy and also agree that if you want to expose it in the callback remove the underscore because it's not something "internal".	NEGATIVE	0.8530386090278625	I agree it can get handy and also agree that if you want to expose it in the callback remove the underscore because it's not something "internal"	1	-2	 I[0] agree[0] it[0] can[0] get[0] handy[0] and[0] also[0] agree[0] that[0] if[0] you[0] want[0] to[0] expose[-1] it[0] in[0] the[0] callback[0] remove[0] the[0] underscore[0] because[0] it's[0] not[0] something[0] internal[0] [[Sentence=-2,1=word max, 1-5]][[[1,-2 max of sentences]]]
This is breaking lots of code for us, we now have to check if each date column actually returns a date object or not :(	NEGATIVE	0.9986563920974731	This is breaking lots of code for us, we now have to check if each date column actually returns a date object or not not	1	-2	 This[0] is[0] breaking[0] lots[0] of[0] code[0] for[0] us[0] we[0] now[0] have[0] to[0] check[0] if[0] each[0] date[0] column[0] actually[0] returns[0] a[0] date[0] object[0] or[0] not[0][-1 Emoticon] [[Sentence=-2,1=word max, 1-5]][[[1,-2 max of sentences]]]
This should only happen on invalid dates. How did you treat invalid dates before?	NEGATIVE	0.9993448257446289	This should only happen on invalid dates.<br> How did you treat invalid dates before?	2	-2	 This[0] should[0] only[0] happen[0] on[0] invalid[-1] dates[0] [[Sentence=-2,1=word max, 1-5]] How[0] did[0] you[0] treat[1] invalid[-1] dates[0] before[0] [[Sentence=-2,2=word max, 1-5]][[[2,-2 max of sentences]]]
Yay :palm_tree:	POSITIVE	0.7426583766937256	Yay :palm_tree:	2	-1	 Yay[1] palm_tree[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
:) thanks for the catch @dougwilson	POSITIVE	0.9987611174583435	 thanks for the catch @dougwilson	2	-1	[+1 Emoticon] thanks[1] for[0] the[0] catch[0] @dougwilson[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
This is sync? I thought this had to be async :)	NEGATIVE	0.9892633557319641	This is sync?<br> I thought this had to be async async	2	-1	 This[0] is[0] sync[0] [[Sentence=-1,1=word max, 1-5]] I[0] thought[0] this[0] had[0] to[0] be[0] async[0][+1 Emoticon] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
It's magic! Basically the statement is not prepared yet when the  prepare()  function returns, this happens async in the background. However, you can already call query() on the returned statement, and the actual query will execute once the prepare is done. If the prepare has an error, the error goes to the query.Not sure if this is the right / perfect API, but it seemed to fit well with how the lib is working so far. What ya think?	NEGATIVE	0.5357592701911926	It's magic!<br> Basically the statement is not prepared yet when the  prepare(  function returns, this happens async in the background.<br> However, you can already call query( on the returned statement, and the actual query will execute once the prepare is done.<br> If the prepare has an error, the error goes to the query.<br>Not sure if this is the right / perfect API, but it seemed to fit well with how the lib is working so far.<br> What ya think?	2	-2	 It's[0] magic[0] [[Sentence=-1,1=word max, 1-5]] Basically[0] the[0] statement[0] is[0] not[0] prepared[0] yet[0] when[0] the[0] prepare[0] function[0] returns[0] this[0] happens[0] async[0] in[0] the[0] background[0] [[Sentence=-1,1=word max, 1-5]] However[0] you[0] can[0] already[0] call[0] query[0] on[0] the[0] returned[0] statement[0] and[0] the[0] actual[0] query[0] will[0] execute[-1] once[0] the[0] prepare[0] is[0] done[0] [[Sentence=-2,1=word max, 1-5]] If[0] the[0] prepare[0] has[0] an[0] error[-1] the[0] error[-1] goes[0] to[0] the[0] query[0] [[Sentence=-2,1=word max, 1-5]] Not[0] sure[0] if[0] this[0] is[0] the[0] right[0] /[0] perfect[1] API[0] but[0] it[0] seemed[0] to[0] fit[0] well[0] with[0] how[0] the[0] lib[0] is[0] working[0] so[0] far[0] [[Sentence=-1,2=word max, 1-5]] What[0] ya[0] think[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
I love it, no need to add another level, just call prepare and query right after :)	POSITIVE	0.9998003840446472	I love it, no need to add another level, just call prepare and query right after after	3	-1	 I[0] love[2] it[0] no[0] need[0] to[0] add[0] another[0] level[0] just[0] call[0] prepare[0] and[0] query[0] right[0] after[0][+1 Emoticon] [[Sentence=-1,3=word max, 1-5]][[[3,-1 max of sentences]]]
Build failing since this commit.	NEGATIVE	0.9997910857200623	Build failing since this commit.	1	-3	 Build[0] failing[-2] since[0] this[0] commit[0] [[Sentence=-3,1=word max, 1-5]][[[1,-3 max of sentences]]]
Has the fix been included in a build and if so what is the earliest version it was included in? I'm running v0.10.21 and	NEGATIVE	0.9994203448295593	Has the fix been included in a build and if so what is the earliest version it was included in?<br> I'm running v0.10.21 and	1	-1	 Has[0] the[0] fix[0] been[0] included[0] in[0] a[0] build[0] and[0] if[0] so[0] what[0] is[0] the[0] earliest[0] version[0] it[0] was[0] included[0] in[0] [[Sentence=-1,1=word max, 1-5]] I'm[0] running[0] v0[0] .10[0] .21[0] and[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
It's included in 2.0.0-alpha9	NEGATIVE	0.9551977515220642	It's included in 2.0.0-alpha9	1	-1	 It's[0] included[0] in[0] 2[0] .0[0] .0[0] alpha9[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
: 1:	POSITIVE	0.9945157170295715	: 1:	1	-1	 1[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
Congratulations guys!PS: don't forget to update changelog please :)	POSITIVE	0.9996092915534973	Congratulations guys!<br>PS: don't forget to update changelog please please	3	-1	 Congratulations[2] guys[0] [[Sentence=-1,3=word max, 1-5]] PS[0] don't[0] forget[0] to[0] update[0] changelog[0] please[1][+1 Emoticon] [[Sentence=-1,3=word max, 1-5]][[[3,-1 max of sentences]]]
Thanks! (me updating changelog)	POSITIVE	0.9994865655899048	Thanks!<br> (me updating changelog)	2	-1	 Thanks[1] [[Sentence=-1,2=word max, 1-5]] me[0] updating[0] changelog[0] [[Sentence=-1,1=word max, 1-5]][[[2,-1 max of sentences]]]
Thanks guys, i am waiting for this release..	POSITIVE	0.9895303845405579	Thanks guys, i am waiting for this release.	2	-1	 Thanks[1] guys[0] i[0] am[0] waiting[0] for[0] this[0] release[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
AFAIK this can be moved down to line 69, as everything above there will keep the domain (due to either core support, or  Connection  support). This would be prevent a double-bind on all the non-queued cases that way.	NEGATIVE	0.98626309633255	AFAIK this can be moved down to line 69, as everything above there will keep the domain (due to either core support, or  Connection  support)<br> This would be prevent a double-bind on all the non-queued cases that way.	2	-1	 AFAIK[0] this[0] can[0] be[0] moved[0] down[0] to[0] line[0] 69[0] as[0] everything[0] above[0] there[0] will[0] keep[0] the[0] domain[0] due[0] to[0] either[0] core[0] support[1] or[0] Connection[0] support[1] [[Sentence=-1,2=word max, 1-5]] This[0] would[0] be[0] prevent[0] a[0] double[0] bind[0] on[0] all[0] the[0] non[0] queued[0] cases[0] that[0] way[0] [[Sentence=-1,1=word max, 1-5]][[[2,-1 max of sentences]]]
ok sounds right to me	POSITIVE	0.9997910261154175	ok sounds right to me	1	-1	 ok[0] sounds[0] right[0] to[0] me[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
This means it's no longer possible to override  createConnection , although it's still specified in the documentation as working:https://github.com/felixge/node-mysql#pool-options-[Unknown]	NEGATIVE	0.9994542598724365	This means it's no longer possible to override  createConnection , although it's still specified in the documentation as working:https://github.<br>com/felixge/node-mysql#pool-options-[Unknown]	1	-1	 This[0] means[0] it's[0] no[0] longer[0] possible[0] to[0] override[0] createConnection[0] although[0] it's[0] still[0] specified[0] in[0] the[0] documentation[0] as[0] working[0] https[0] ://github[0] [[Sentence=-1,1=word max, 1-5]] com/felixge/node[0] mysql#pool[0] options[0] -[Unknown][0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
Thank you, this has been removed from the documentation.	NEGATIVE	0.9970868825912476	Thank you, this has been removed from the documentation.	2	-1	 Thank[1] you[0] this[0] has[0] been[0] removed[0] from[0] the[0] documentation[0] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
createSecurePair is deprecated in v0.11.x.You're probably better off just doing something like this for v0.10  instead:    javascriptvar wrappedSock   tls.connect({key: this.config.ssl.key,cert: this.config.ssl.cert,passphrase: this.config.ssl.passphrase,ca: this.config.ssl.ca,socket: this._socket}, onSecure);wrappedSock.pipe(this._protocol);// write to wrappedSock and not this._socket from here on out ...   	NEGATIVE	0.9994959235191345	createSecurePair is deprecated in v0.11.<br>x.<br>You're probably better off just doing something like this for v0.10  instead:    javascriptvar wrappedSock   tls.<br>connect({key: this.<br>config.<br>ssl.<br>key,cert: this.<br>config.<br>ssl.<br>cert,passphrase: this.<br>config.<br>ssl.<br>passphrase,ca: this.<br>config.<br>ssl.<br>ca,socket: this._socket}, onSecure)wrappedSock.<br>pipe(this._protocol);// write to wrappedSock and not this._socket from here on out .<br>  	2	-1	 createSecurePair[0] is[0] deprecated[0] in[0] v0[0] .11[0] [[Sentence=-1,1=word max, 1-5]] x[1] [[Sentence=-1,2=word max, 1-5]] You're[0] probably[0] better[0] off[0] just[0] doing[0] something[0] like[1] this[0] for[0] v0[0] .10[0] instead[0] javascriptvar[0] wrappedSock[0] tls[0] [[Sentence=-1,2=word max, 1-5]] connect[0] ({key[0] this[0] [[Sentence=-1,1=word max, 1-5]] config[0] [[Sentence=-1,1=word max, 1-5]] ssl[0] [[Sentence=-1,1=word max, 1-5]] key[0] cert[0] this[0] [[Sentence=-1,1=word max, 1-5]] config[0] [[Sentence=-1,1=word max, 1-5]] ssl[0] [[Sentence=-1,1=word max, 1-5]] cert[0] passphrase[0] this[0] [[Sentence=-1,1=word max, 1-5]] config[0] [[Sentence=-1,1=word max, 1-5]] ssl[0] [[Sentence=-1,1=word max, 1-5]] passphrase[0] ca[0] this[0] [[Sentence=-1,1=word max, 1-5]] config[0] [[Sentence=-1,1=word max, 1-5]] ssl[0] [[Sentence=-1,1=word max, 1-5]] ca[0] socket[0] this[0] ._socket}[0] onSecure[0] wrappedSock[0] [[Sentence=-1,1=word max, 1-5]] pipe[0] this[0] ._protocol[0] );//[0] write[0] to[0] wrappedSock[0] and[0] not[0] this[0] ._socket[0] from[0] here[0] on[0] out[0] [[Sentence=-1,1=word max, 1-5]][[[2,-1 max of sentences]]]
Thanks, I'll try this! (also in node-mysql2 as the code is the same)	POSITIVE	0.9881325960159302	Thanks, I'll try this!<br> (also in node-mysql2 as the code is the same)	2	-1	 Thanks[1] I'll[0] try[0] this[0] [[Sentence=-1,2=word max, 1-5]] also[0] in[0] node[0] mysql2[0] as[0] the[0] code[0] is[0] the[0] same[0] [[Sentence=-1,1=word max, 1-5]][[[2,-1 max of sentences]]]
created issue for this - https://github.com/felixge/node-mysql/issues/737	NEGATIVE	0.994354784488678	created issue for this - https://github.<br>com/felixge/node-mysql/issues/737	1	-1	 created[0] issue[0] for[0] this[0] https[0] ://github[0] [[Sentence=-1,1=word max, 1-5]] com/felixge/node[0] mysql/issues/737[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
Why is this custom startTLS code necessary? Why not just use  tls.connect({ socket: this._socket, ... }, onSecure);  to upgrade the socket? That functionality exists even in v0.8.x. It should work for v0.11  as well.	NEGATIVE	0.9960659742355347	Why is this custom startTLS code necessary?<br> Why not just use  tls.<br>connect({ socket: this._socket, .<br> }, onSecure)  to upgrade the socket?<br> That functionality exists even in v0.8.<br>x.<br> It should work for v0.11  as well.	2	-1	 Why[0] is[0] this[0] custom[0] startTLS[0] code[0] necessary[0] [[Sentence=-1,1=word max, 1-5]] Why[0] not[0] just[0] use[0] tls[0] [[Sentence=-1,1=word max, 1-5]] connect[0] ({[0] socket[0] this[0] ._socket[0] [[Sentence=-1,1=word max, 1-5]] }[0] onSecure[0] to[0] upgrade[0] the[0] socket[0] [[Sentence=-1,1=word max, 1-5]] That[0] functionality[0] exists[0] even[0] in[0] v0[0] .8[0] [[Sentence=-1,1=word max, 1-5]] x[1] [[Sentence=-1,2=word max, 1-5]] It[0] should[0] work[0] for[0] v0[0] .11[0] as[0] well[0] [[Sentence=-1,1=word max, 1-5]][[[2,-1 max of sentences]]]
This was just an extension of the code that was contributed ;) I'll look into replacing it with  tls.connect .	NEGATIVE	0.9993691444396973	This was just an extension of the code that was contributed contributed I'll look into replacing it with  tls.<br>connect .	1	-1	 This[0] was[0] just[0] an[0] extension[0] of[0] the[0] code[0] that[0] was[0] contributed[0] I'll[0] look[0] into[0] replacing[0] it[0] with[0] tls[0] [[Sentence=-1,1=word max, 1-5]] connect[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
P.S. A PR is always welcome!	POSITIVE	0.9998204708099365	P.<br>S.<br> A PR is always welcome!	2	-1	 P[0] [[Sentence=-1,1=word max, 1-5]] S[0] [[Sentence=-1,1=word max, 1-5]] A[0] PR[0] is[0] always[0] welcome[1] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
@mscdex nevermind, I have already swapped it to  tls.connect  on my local machine! I see a "wrinkle" right now in that  tls.connect  will verify the hostname on the certificate; I need to research to see if this is a valid default or not for MySQL servers.	NEGATIVE	0.9986193180084229	@mscdex nevermind, I have already swapped it to  tls.<br>connect  on my local machine!<br> I see a "wrinkle" right now in that  tls.<br>connect  will verify the hostname on the certificate; I need to research to see if this is a valid default or not for MySQL servers.	1	-2	 @mscdex[0] nevermind[0] I[0] have[0] already[0] swapped[0] it[0] to[0] tls[0] [[Sentence=-1,1=word max, 1-5]] connect[0] on[0] my[0] local[0] machine[0] [[Sentence=-1,1=word max, 1-5]] I[0] see[0] a[0] wrinkle[-1] right[0] now[0] in[0] that[0] tls[0] [[Sentence=-2,1=word max, 1-5]] connect[0] will[0] verify[0] the[0] hostname[0] on[0] the[0] certificate[0] I[0] need[0] to[0] research[0] to[0] see[0] if[0] this[0] is[0] a[0] valid[0] default[-1] or[0] not[0] for[0] MySQL[0] servers[0] [[Sentence=-2,1=word max, 1-5]][[[1,-2 max of sentences]]]
Looks like no MySQL hosts out there support hostname verification by default (perhaps people's own setups may, but not third-party services). Unfortunately  tls.connect  has no way to opt into certificate verification without CN/SAN verification...	NEGATIVE	0.9997050762176514	Looks like no MySQL hosts out there support hostname verification by default (perhaps people's own setups may, but not third-party services)<br> Unfortunately  tls.<br>connect  has no way to opt into certificate verification without CN/SAN verification.	2	-2	 Looks[0] like[1] no[0] MySQL[0] hosts[0] out[0] there[0] support[1] hostname[0] verification[0] by[0] default[-1] perhaps[0] people's[0] own[0] setups[0] may[0] but[0] not[0] third[0] party[0] services[0] [[Sentence=-2,2=word max, 1-5]] Unfortunately[-1] tls[0] [[Sentence=-2,1=word max, 1-5]] connect[0] has[0] no[0] way[0] to[0] opt[0] into[0] certificate[0] verification[0] without[0] CN/SAN[0] verification[0] [[Sentence=-1,1=word max, 1-5]][[[2,-2 max of sentences]]]
This will be an endlessly moving target; there is no version declaration.	NEGATIVE	0.9942914843559265	This will be an endlessly moving target; there is no version declaration.	1	-1	 This[0] will[0] be[0] an[0] endlessly[0] moving[0] target[0] there[0] is[0] no[0] version[0] declaration[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
oops, already pushed to master. I'll change to 1.2	NEGATIVE	0.829147219657898	oops, already pushed to master.<br> I'll change to 1.2	1	-1	 oops[0] already[0] pushed[0] to[0] master[0] [[Sentence=-1,1=word max, 1-5]] I'll[0] change[0] to[0] 1[0] .2[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
I have reverted this commit until you can declare which versions of io.js are actually supported and we don't suddenly start failing when 2.0 comes out, which this commit will cause.	NEGATIVE	0.9820851683616638	I have reverted this commit until you can declare which versions of io.<br>js are actually supported and we don't suddenly start failing when 2.0 comes out, which this commit will cause.	2	-3	 I[0] have[0] reverted[-1] this[0] commit[0] until[0] you[0] can[0] declare[0] which[0] versions[0] of[0] io[0] [[Sentence=-2,1=word max, 1-5]] js[0] are[0] actually[0] supported[1] and[0] we[0] don't[0] suddenly[0] start[0] failing[-2] when[0] 2[0] .0[0] comes[0] out[0] which[0] this[0] commit[0] will[0] cause[0] [[Sentence=-3,2=word max, 1-5]][[[2,-3 max of sentences]]]
Ok. If you do, please update  package.json  to specify that 1.0 and 1.1 of io.js are not supported.	NEGATIVE	0.8602636456489563	Ok.<br> If you do, please update  package.<br>json  to specify that 1.0 and 1.1 of io.<br>js are not supported.	2	-2	 Ok[0] [[Sentence=-1,1=word max, 1-5]] If[0] you[0] do[0] please[1] update[0] package[0] [[Sentence=-1,2=word max, 1-5]] json[0] to[0] specify[0] that[0] 1[0] .0[0] and[0] 1[0] .1[0] of[0] io[0] [[Sentence=-1,1=word max, 1-5]] js[0] are[0] not[0] supported[1][NegatedDueToPreviousWord] [[Sentence=-2,1=word max, 1-5]][[[2,-2 max of sentences]]]
I'll use this in mysql2 if you don't mind :)	NEGATIVE	0.9967144131660461	I'll use this in mysql2 if you don't mind mind	2	-1	 I'll[0] use[0] this[0] in[0] mysql2[0] if[0] you[0] don't[0] mind[0][+1 Emoticon] [[Sentence=-1,2=word max, 1-5]][[[2,-1 max of sentences]]]
Please do :) I'm 99% sure the Node.js community stole setting up istanbul   coveralls.io from me last year :) And it's been awesome to see people interested in getting code coverage going :D	POSITIVE	0.9988171458244324	Please do do I'm 99% sure the Node.<br>js community stole setting up istanbul   coveralls.<br>io from me last year year And it's been awesome to see people interested in getting code coverage going going	3	-2	 Please[1] do[0][+1 Emoticon] I'm[0] 99%[0] sure[0] the[0] Node[0] [[Sentence=-1,2=word max, 1-5]] js[0] community[0] stole[-1] setting[0] up[0] istanbul[0] coveralls[0] [[Sentence=-2,1=word max, 1-5]] io[0] from[0] me[0] last[0] year[0][+1 Emoticon] And[0] it's[0] been[0] awesome[2] to[0] see[0] people[0] interested[1] in[0] getting[0] code[0] coverage[0] going[0][+1 Emoticon] [[Sentence=-1,3=word max, 1-5]][[[3,-2 max of sentences]]]
P.S. I may make tweaks to the config once it actually starts running on AppVeyor :) So far this configuration was based off Express.js stuff and the MySQL parts are all just guesses D:	NEGATIVE	0.9989379644393921	P.<br>S.<br> I may make tweaks to the config once it actually starts running on AppVeyor AppVeyor So far this configuration was based off Express.<br>js stuff and the MySQL parts are all just guesses D:	2	-1	 P[0] [[Sentence=-1,1=word max, 1-5]] S[0] [[Sentence=-1,1=word max, 1-5]] I[0] may[0] make[0] tweaks[0] to[0] the[0] config[0] once[0] it[0] actually[0] starts[0] running[0] on[0] AppVeyor[0][+1 Emoticon] So[0] far[0] this[0] configuration[0] was[0] based[0] off[0] Express[0] [[Sentence=-1,2=word max, 1-5]] js[0] stuff[0] and[0] the[0] MySQL[0] parts[0] are[0] all[0] just[0] guesses[0] D[0] [[Sentence=-1,1=word max, 1-5]][[[2,-1 max of sentences]]]
thanks :) I'll wait for first test results	NEGATIVE	0.6420706510543823	thanks thanks I'll wait for first test results	3	-1	 thanks[1][+1 Emoticon] I'll[0] wait[0] for[0] first[0] test[0] results[0] [[Sentence=-1,3=word max, 1-5]][[[3,-1 max of sentences]]]
:disappointed: https://youtu.be/xeKMS62GrTI@jperras but "both" is too much. lol	NEGATIVE	0.9996888041496277	:disappointed: https://youtu.<br>be/xeKMS62GrTI@jperras but "both" is too much.<br> laugh out loud	2	-2	 disappointed[-1] https[0] ://youtu[0] [[Sentence=-2,1=word max, 1-5]] be/xeKMS62GrTI@jperras[0] but[0] both[0] is[0] too[0] much[0] [[Sentence=-1,1=word max, 1-5]] lol[1] [[Sentence=-1,2=word max, 1-5]][[[2,-2 max of sentences]]]
: 1:	POSITIVE	0.9945157170295715	: 1:	1	-1	 1[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
\o/	NEGATIVE	0.6763930320739746	\o/	1	-1	 \o/[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
can this be called out of order? Two compressed packets arrive one after another, cp1, cp2    cp1.inflate called, cp2 .inflate called; cp2.inflate pushes result before cp1 ?	NEGATIVE	0.9987939596176147	can this be called out of order?<br> Two compressed packets arrive one after another, cp1, cp2    cp1.<br>inflate called, cp2 .<br>inflate called; cp2.<br>inflate pushes result before cp1 ?	1	-1	 can[0] this[0] be[0] called[0] out[0] of[0] order[0] [[Sentence=-1,1=word max, 1-5]] Two[0] compressed[0] packets[0] arrive[0] one[0] after[0] another[0] cp1[0] cp2[0] cp1[0] [[Sentence=-1,1=word max, 1-5]] inflate[0] called[0] cp2[0] [[Sentence=-1,1=word max, 1-5]] inflate[0] called[0] cp2[0] [[Sentence=-1,1=word max, 1-5]] inflate[0] pushes[0] result[0] before[0] cp1[0] [[Sentence=-1,1=word max, 1-5]][[[1,-1 max of sentences]]]
This still needs a lot of tests added, but this impl will only allow a single outstanding inflate at a time, which is what the  _inflating  guard is doing.	NEGATIVE	0.9975545406341553	This still needs a lot of tests added, but this impl will only allow a single outstanding inflate at a time, which is what the  _inflating  guard is doing.	3	-1	 This[0] still[0] needs[0] a[0] lot[0] of[0] tests[0] added[0] but[0] this[0] impl[0] will[0] only[0] allow[0] a[0] single[0] outstanding[2] inflate[0] at[0] a[0] time[0] which[0] is[0] what[0] the[0] _inflating[0] guard[0] is[0] doing[0] [[Sentence=-1,3=word max, 1-5]][[[3,-1 max of sentences]]]
	POSITIVE	0.7481210827827454		1	-1	
